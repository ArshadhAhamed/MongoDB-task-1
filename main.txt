Find all the information about each products
Find the product price which are between 400 to 800
Find the product price which are not between 400 to 600
List the four product which are grater than 500 in price 
Find the product name and product material of each products
Find the product with a row id of 10
Find only the product name and product material
Find all products which contain the value of soft in product material 
Find products which contain product color indigo  and product price 492.00
Delete the products which product price value are same



1.Find all the information about each products
  
  db.products.find().toArray()

2.Find the product price which are between 400 to 800

   db.products.find(  { $and: [ { product_price: { $gte: 400 } }, { product_price: {$lte:600 } } ] } )  

3.Find the product price which are not between 400 to 600
   db.products.find( {
  $and: [
    { product_price: { $not: { $gt: 400, $lt: 600 } } }
  ]
})

4.List the four product which are grater than 500 in price 
        
        db.products.find({product_price:{$gte:500}}).limit(4)


5.Find the product name and product material of each products

  db.products.find().forEach( (p)=> { print(p.product_name +"  "+ p.product_material) })
      

6.Find the product with a row id of 10
      db.products.find({id:{$eq:"10"}})


7.Find only the product name and product material

  db.products.find({},{product_name:1,product_material:1,_id:0})

8.Find all products which contain the value of soft in product material     
       db.products.find({
    "product_material": "Soft"
})

9.Find products which contain product color indigo  and product price 492.00
   
   by using or operator
         db.products.find({
    $or: [
        { "product_color": "indigo" },
        { "product_price": 492.00 }
    ]
})

  by using and operator
         db.products.find({
    $and: [
        { "product_color": "indigo" },
        { "product_price": 492.00 }
    ]
})

10.Delete the products which product price value are same
     db.products
  .aggregate(
    [
      {
        $group: {
          _id: "$product_price",
          dups: { $push: "$_id" },
          count: { $sum: 1 },
        },
      },
      { $match: { count: { $gt: 1 } } },
    ],
    { allowDiskUse: true }
  )
  .forEach(function (doc) {
    doc.dups.shift();
    db.products.deleteMany({ _id: { $in: doc.dups } });
  });